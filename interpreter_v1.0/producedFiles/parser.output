Grammar

    0 $accept: interprlist $end

    1 stmt: branchstmt
    2     | loopstmt
    3     | exp ';'
    4     | arraydecl

    5 branchstmt: IF '(' exp ')' bodylist
    6           | IF '(' exp ')' bodylist ELSE bodylist

    7 loopstmt: WHILE '(' exp ')' bodylist
    8         | DO bodylist WHILE '(' exp ')'
    9         | FOR '(' assignexp ';' exp ';' exp ')' bodylist

   10 bodylist: '{' list '}'
   11         | stmt

   12 list: %empty
   13     | list stmt

   14 arithmexp: exp '+' exp
   15          | exp '-' exp
   16          | exp '*' exp
   17          | exp '/' exp
   18          | exp '%' exp
   19          | exp POW exp
   20          | '(' exp ')'
   21          | '-' exp
   22          | '+' exp

   23 logicexp: exp AND exp
   24         | exp OR exp
   25         | NOT exp

   26 bitwisexp: exp '|' exp
   27          | exp '^' exp
   28          | exp '&' exp
   29          | '~' exp
   30          | exp LEFTSHIFT exp
   31          | exp RIGHTSHIFT exp

   32 incrmentexp: NAME INCREMENT
   33            | NAME DECREMENT
   34            | INCREMENT NAME
   35            | DECREMENT NAME

   36 exp: exp CMP exp
   37    | arithmexp
   38    | logicexp
   39    | bitwisexp
   40    | NUMBER
   41    | BIFUNC '(' exp ')'
   42    | TYPEOF '(' exp ')'
   43    | TYPEOF '(' arraydecls ')'
   44    | NAME
   45    | ERRNAME
   46    | assignexp
   47    | NAME '(' explist ')'
   48    | NAME '(' ')'
   49    | NAME '[' exp ']'
   50    | NAME '[' exp ']' '=' exp
   51    | arrpushpop
   52    | incrmentexp
   53    | STREXP
   54    | STRERR
   55    | READ '(' ')'

   56 assignexp: NAME '=' exp
   57          | NAME ASGNSUM exp
   58          | NAME ASGNDIF exp
   59          | NAME ASGNPROD exp
   60          | NAME ASGNDIV exp
   61          | NAME ASGNMOD exp

   62 arraydeclright: '[' arrayelemsast ']'
   63               | '[' ']'

   64 arraydecl: arraydecls ';'

   65 arraydecls: NAME '=' arraydeclright
   66           | arraydeclright

   67 arrayelemsast: exp
   68              | exp ',' arrayelemsast

   69 arrpushpop: NAME '.' LENGTH
   70           | NAME '.' PUSH '(' exp ')'
   71           | NAME '.' POP '(' ')'

   72 explist: exp
   73        | exp ',' explist

   74 symlist: NAME
   75        | NAME ',' symlist

   76 functionbody: list returnstmt

   77 returnstmt: RETURN ';'
   78           | RETURN exp ';'

   79 funcdecl: FUNCTION NAME '(' symlist ')' '{' functionbody '}'

   80 funcnoparamdecl: FUNCTION NAME '(' ')' '{' functionbody '}'

   81 funcdecls: funcdecl
   82          | funcnoparamdecl

   83 interprlist: %empty
   84            | interprlist stmt
   85            | interprlist funcdecls
   86            | interprlist error


Terminals, with rules where they appear

$end (0) 0
'%' (37) 18
'&' (38) 28
'(' (40) 5 6 7 8 9 20 41 42 43 47 48 55 70 71 79 80
')' (41) 5 6 7 8 9 20 41 42 43 47 48 55 70 71 79 80
'*' (42) 16
'+' (43) 14 22
',' (44) 68 73 75
'-' (45) 15 21
'.' (46) 69 70 71
'/' (47) 17
';' (59) 3 9 64 77 78
'=' (61) 50 56 65
'[' (91) 49 50 62 63
']' (93) 49 50 62 63
'^' (94) 27
'{' (123) 10 79 80
'|' (124) 26
'}' (125) 10 79 80
'~' (126) 29
error (256) 86
NUMBER (258) 40
NAME (259) 32 33 34 35 44 47 48 49 50 56 57 58 59 60 61 65 69 70 71
    74 75 79 80
BIFUNC (260) 41
STREXP (261) 53
STRERR (262) 54
IF (263) 5 6
ELSE (264) 6
WHILE (265) 7 8
DO (266) 8
FOR (267) 9
FUNCTION (268) 79 80
RETURN (269) 77 78
LENGTH (270) 69
TYPEOF (271) 42 43
PUSH (272) 70
POP (273) 71
READ (274) 55
ERRNAME (275) 45
INCREMENT (276) 32 34
DECREMENT (277) 33 35
ASGNSUM (278) 57
ASGNDIF (279) 58
ASGNPROD (280) 59
ASGNDIV (281) 60
ASGNMOD (282) 61
OR (283) 24
AND (284) 23
CMP (285) 36
LEFTSHIFT (286) 30
RIGHTSHIFT (287) 31
UMINUS (288)
UPLUS (289)
NOT (290) 25
POW (291) 19
"then" (292)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
stmt (58)
    on left: 1 2 3 4, on right: 11 13 84
branchstmt (59)
    on left: 5 6, on right: 1
loopstmt (60)
    on left: 7 8 9, on right: 2
bodylist (61)
    on left: 10 11, on right: 5 6 7 8 9
list (62)
    on left: 12 13, on right: 10 13 76
arithmexp (63)
    on left: 14 15 16 17 18 19 20 21 22, on right: 37
logicexp (64)
    on left: 23 24 25, on right: 38
bitwisexp (65)
    on left: 26 27 28 29 30 31, on right: 39
incrmentexp (66)
    on left: 32 33 34 35, on right: 52
exp (67)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55, on right: 3 5 6 7 8 9 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 36 41 42 49 50 56 57 58 59 60 61 67 68 70 72
    73 78
assignexp (68)
    on left: 56 57 58 59 60 61, on right: 9 46
arraydeclright (69)
    on left: 62 63, on right: 65 66
arraydecl (70)
    on left: 64, on right: 4
arraydecls (71)
    on left: 65 66, on right: 43 64
arrayelemsast (72)
    on left: 67 68, on right: 62 68
arrpushpop (73)
    on left: 69 70 71, on right: 51
explist (74)
    on left: 72 73, on right: 47 73
symlist (75)
    on left: 74 75, on right: 75 79
functionbody (76)
    on left: 76, on right: 79 80
returnstmt (77)
    on left: 77 78, on right: 76
funcdecl (78)
    on left: 79, on right: 81
funcnoparamdecl (79)
    on left: 80, on right: 82
funcdecls (80)
    on left: 81 82, on right: 85
interprlist (81)
    on left: 83 84 85 86, on right: 0 84 85 86


State 0

    0 $accept: . interprlist $end

    $default  reduce using rule 83 (interprlist)

    interprlist  go to state 1


State 1

    0 $accept: interprlist . $end
   84 interprlist: interprlist . stmt
   85            | interprlist . funcdecls
   86            | interprlist . error

    $end       shift, and go to state 2
    error      shift, and go to state 3
    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    FUNCTION   shift, and go to state 13
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '['        shift, and go to state 24

    stmt             go to state 25
    branchstmt       go to state 26
    loopstmt         go to state 27
    arithmexp        go to state 28
    logicexp         go to state 29
    bitwisexp        go to state 30
    incrmentexp      go to state 31
    exp              go to state 32
    assignexp        go to state 33
    arraydeclright   go to state 34
    arraydecl        go to state 35
    arraydecls       go to state 36
    arrpushpop       go to state 37
    funcdecl         go to state 38
    funcnoparamdecl  go to state 39
    funcdecls        go to state 40


State 2

    0 $accept: interprlist $end .

    $default  accept


State 3

   86 interprlist: interprlist error .

    $default  reduce using rule 86 (interprlist)


State 4

   40 exp: NUMBER .

    $default  reduce using rule 40 (exp)


State 5

   32 incrmentexp: NAME . INCREMENT
   33            | NAME . DECREMENT
   44 exp: NAME .
   47    | NAME . '(' explist ')'
   48    | NAME . '(' ')'
   49    | NAME . '[' exp ']'
   50    | NAME . '[' exp ']' '=' exp
   56 assignexp: NAME . '=' exp
   57          | NAME . ASGNSUM exp
   58          | NAME . ASGNDIF exp
   59          | NAME . ASGNPROD exp
   60          | NAME . ASGNDIV exp
   61          | NAME . ASGNMOD exp
   65 arraydecls: NAME . '=' arraydeclright
   69 arrpushpop: NAME . '.' LENGTH
   70           | NAME . '.' PUSH '(' exp ')'
   71           | NAME . '.' POP '(' ')'

    INCREMENT  shift, and go to state 41
    DECREMENT  shift, and go to state 42
    '='        shift, and go to state 43
    ASGNSUM    shift, and go to state 44
    ASGNDIF    shift, and go to state 45
    ASGNPROD   shift, and go to state 46
    ASGNDIV    shift, and go to state 47
    ASGNMOD    shift, and go to state 48
    '('        shift, and go to state 49
    '['        shift, and go to state 50
    '.'        shift, and go to state 51

    $default  reduce using rule 44 (exp)


State 6

   41 exp: BIFUNC . '(' exp ')'

    '('  shift, and go to state 52


State 7

   53 exp: STREXP .

    $default  reduce using rule 53 (exp)


State 8

   54 exp: STRERR .

    $default  reduce using rule 54 (exp)


State 9

    5 branchstmt: IF . '(' exp ')' bodylist
    6           | IF . '(' exp ')' bodylist ELSE bodylist

    '('  shift, and go to state 53


State 10

    7 loopstmt: WHILE . '(' exp ')' bodylist

    '('  shift, and go to state 54


State 11

    8 loopstmt: DO . bodylist WHILE '(' exp ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '{'        shift, and go to state 55
    '['        shift, and go to state 24

    stmt            go to state 56
    branchstmt      go to state 26
    loopstmt        go to state 27
    bodylist        go to state 57
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37


State 12

    9 loopstmt: FOR . '(' assignexp ';' exp ';' exp ')' bodylist

    '('  shift, and go to state 58


State 13

   79 funcdecl: FUNCTION . NAME '(' symlist ')' '{' functionbody '}'
   80 funcnoparamdecl: FUNCTION . NAME '(' ')' '{' functionbody '}'

    NAME  shift, and go to state 59


State 14

   42 exp: TYPEOF . '(' exp ')'
   43    | TYPEOF . '(' arraydecls ')'

    '('  shift, and go to state 60


State 15

   55 exp: READ . '(' ')'

    '('  shift, and go to state 61


State 16

   45 exp: ERRNAME .

    $default  reduce using rule 45 (exp)


State 17

   34 incrmentexp: INCREMENT . NAME

    NAME  shift, and go to state 62


State 18

   35 incrmentexp: DECREMENT . NAME

    NAME  shift, and go to state 63


State 19

   22 arithmexp: '+' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 65
    assignexp    go to state 33
    arrpushpop   go to state 37


State 20

   21 arithmexp: '-' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 66
    assignexp    go to state 33
    arrpushpop   go to state 37


State 21

   25 logicexp: NOT . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 67
    assignexp    go to state 33
    arrpushpop   go to state 37


State 22

   29 bitwisexp: '~' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 68
    assignexp    go to state 33
    arrpushpop   go to state 37


State 23

   20 arithmexp: '(' . exp ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 69
    assignexp    go to state 33
    arrpushpop   go to state 37


State 24

   62 arraydeclright: '[' . arrayelemsast ']'
   63               | '[' . ']'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    ']'        shift, and go to state 70

    arithmexp      go to state 28
    logicexp       go to state 29
    bitwisexp      go to state 30
    incrmentexp    go to state 31
    exp            go to state 71
    assignexp      go to state 33
    arrayelemsast  go to state 72
    arrpushpop     go to state 37


State 25

   84 interprlist: interprlist stmt .

    $default  reduce using rule 84 (interprlist)


State 26

    1 stmt: branchstmt .

    $default  reduce using rule 1 (stmt)


State 27

    2 stmt: loopstmt .

    $default  reduce using rule 2 (stmt)


State 28

   37 exp: arithmexp .

    $default  reduce using rule 37 (exp)


State 29

   38 exp: logicexp .

    $default  reduce using rule 38 (exp)


State 30

   39 exp: bitwisexp .

    $default  reduce using rule 39 (exp)


State 31

   52 exp: incrmentexp .

    $default  reduce using rule 52 (exp)


State 32

    3 stmt: exp . ';'
   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ';'         shift, and go to state 87


State 33

   46 exp: assignexp .

    $default  reduce using rule 46 (exp)


State 34

   66 arraydecls: arraydeclright .

    $default  reduce using rule 66 (arraydecls)


State 35

    4 stmt: arraydecl .

    $default  reduce using rule 4 (stmt)


State 36

   64 arraydecl: arraydecls . ';'

    ';'  shift, and go to state 88


State 37

   51 exp: arrpushpop .

    $default  reduce using rule 51 (exp)


State 38

   81 funcdecls: funcdecl .

    $default  reduce using rule 81 (funcdecls)


State 39

   82 funcdecls: funcnoparamdecl .

    $default  reduce using rule 82 (funcdecls)


State 40

   85 interprlist: interprlist funcdecls .

    $default  reduce using rule 85 (interprlist)


State 41

   32 incrmentexp: NAME INCREMENT .

    $default  reduce using rule 32 (incrmentexp)


State 42

   33 incrmentexp: NAME DECREMENT .

    $default  reduce using rule 33 (incrmentexp)


State 43

   56 assignexp: NAME '=' . exp
   65 arraydecls: NAME '=' . arraydeclright

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '['        shift, and go to state 24

    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 89
    assignexp       go to state 33
    arraydeclright  go to state 90
    arrpushpop      go to state 37


State 44

   57 assignexp: NAME ASGNSUM . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 91
    assignexp    go to state 33
    arrpushpop   go to state 37


State 45

   58 assignexp: NAME ASGNDIF . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 92
    assignexp    go to state 33
    arrpushpop   go to state 37


State 46

   59 assignexp: NAME ASGNPROD . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 93
    assignexp    go to state 33
    arrpushpop   go to state 37


State 47

   60 assignexp: NAME ASGNDIV . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 94
    assignexp    go to state 33
    arrpushpop   go to state 37


State 48

   61 assignexp: NAME ASGNMOD . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 95
    assignexp    go to state 33
    arrpushpop   go to state 37


State 49

   47 exp: NAME '(' . explist ')'
   48    | NAME '(' . ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    ')'        shift, and go to state 96

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 97
    assignexp    go to state 33
    arrpushpop   go to state 37
    explist      go to state 98


State 50

   49 exp: NAME '[' . exp ']'
   50    | NAME '[' . exp ']' '=' exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 99
    assignexp    go to state 33
    arrpushpop   go to state 37


State 51

   69 arrpushpop: NAME '.' . LENGTH
   70           | NAME '.' . PUSH '(' exp ')'
   71           | NAME '.' . POP '(' ')'

    LENGTH  shift, and go to state 100
    PUSH    shift, and go to state 101
    POP     shift, and go to state 102


State 52

   41 exp: BIFUNC '(' . exp ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 103
    assignexp    go to state 33
    arrpushpop   go to state 37


State 53

    5 branchstmt: IF '(' . exp ')' bodylist
    6           | IF '(' . exp ')' bodylist ELSE bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 104
    assignexp    go to state 33
    arrpushpop   go to state 37


State 54

    7 loopstmt: WHILE '(' . exp ')' bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 105
    assignexp    go to state 33
    arrpushpop   go to state 37


State 55

   10 bodylist: '{' . list '}'

    $default  reduce using rule 12 (list)

    list  go to state 106


State 56

   11 bodylist: stmt .

    $default  reduce using rule 11 (bodylist)


State 57

    8 loopstmt: DO bodylist . WHILE '(' exp ')'

    WHILE  shift, and go to state 107


State 58

    9 loopstmt: FOR '(' . assignexp ';' exp ';' exp ')' bodylist

    NAME  shift, and go to state 108

    assignexp  go to state 109


State 59

   79 funcdecl: FUNCTION NAME . '(' symlist ')' '{' functionbody '}'
   80 funcnoparamdecl: FUNCTION NAME . '(' ')' '{' functionbody '}'

    '('  shift, and go to state 110


State 60

   42 exp: TYPEOF '(' . exp ')'
   43    | TYPEOF '(' . arraydecls ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '['        shift, and go to state 24

    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 111
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecls      go to state 112
    arrpushpop      go to state 37


State 61

   55 exp: READ '(' . ')'

    ')'  shift, and go to state 113


State 62

   34 incrmentexp: INCREMENT NAME .

    $default  reduce using rule 34 (incrmentexp)


State 63

   35 incrmentexp: DECREMENT NAME .

    $default  reduce using rule 35 (incrmentexp)


State 64

   32 incrmentexp: NAME . INCREMENT
   33            | NAME . DECREMENT
   44 exp: NAME .
   47    | NAME . '(' explist ')'
   48    | NAME . '(' ')'
   49    | NAME . '[' exp ']'
   50    | NAME . '[' exp ']' '=' exp
   56 assignexp: NAME . '=' exp
   57          | NAME . ASGNSUM exp
   58          | NAME . ASGNDIF exp
   59          | NAME . ASGNPROD exp
   60          | NAME . ASGNDIV exp
   61          | NAME . ASGNMOD exp
   69 arrpushpop: NAME . '.' LENGTH
   70           | NAME . '.' PUSH '(' exp ')'
   71           | NAME . '.' POP '(' ')'

    INCREMENT  shift, and go to state 41
    DECREMENT  shift, and go to state 42
    '='        shift, and go to state 114
    ASGNSUM    shift, and go to state 44
    ASGNDIF    shift, and go to state 45
    ASGNPROD   shift, and go to state 46
    ASGNDIV    shift, and go to state 47
    ASGNMOD    shift, and go to state 48
    '('        shift, and go to state 49
    '['        shift, and go to state 50
    '.'        shift, and go to state 51

    $default  reduce using rule 44 (exp)


State 65

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   22          | '+' exp .
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 22 (arithmexp)


State 66

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   21          | '-' exp .
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 21 (arithmexp)


State 67

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   25         | NOT exp .
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 25 (logicexp)


State 68

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   29          | '~' exp .
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 29 (bitwisexp)


State 69

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   20          | '(' exp . ')'
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 115


State 70

   63 arraydeclright: '[' ']' .

    $default  reduce using rule 63 (arraydeclright)


State 71

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   67 arrayelemsast: exp .
   68              | exp . ',' arrayelemsast

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ','         shift, and go to state 116

    $default  reduce using rule 67 (arrayelemsast)


State 72

   62 arraydeclright: '[' arrayelemsast . ']'

    ']'  shift, and go to state 117


State 73

   24 logicexp: exp OR . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 118
    assignexp    go to state 33
    arrpushpop   go to state 37


State 74

   23 logicexp: exp AND . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 119
    assignexp    go to state 33
    arrpushpop   go to state 37


State 75

   26 bitwisexp: exp '|' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 120
    assignexp    go to state 33
    arrpushpop   go to state 37


State 76

   27 bitwisexp: exp '^' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 121
    assignexp    go to state 33
    arrpushpop   go to state 37


State 77

   28 bitwisexp: exp '&' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 122
    assignexp    go to state 33
    arrpushpop   go to state 37


State 78

   36 exp: exp CMP . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 123
    assignexp    go to state 33
    arrpushpop   go to state 37


State 79

   30 bitwisexp: exp LEFTSHIFT . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 124
    assignexp    go to state 33
    arrpushpop   go to state 37


State 80

   31 bitwisexp: exp RIGHTSHIFT . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 125
    assignexp    go to state 33
    arrpushpop   go to state 37


State 81

   14 arithmexp: exp '+' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 126
    assignexp    go to state 33
    arrpushpop   go to state 37


State 82

   15 arithmexp: exp '-' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 127
    assignexp    go to state 33
    arrpushpop   go to state 37


State 83

   16 arithmexp: exp '*' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 128
    assignexp    go to state 33
    arrpushpop   go to state 37


State 84

   17 arithmexp: exp '/' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 129
    assignexp    go to state 33
    arrpushpop   go to state 37


State 85

   18 arithmexp: exp '%' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 130
    assignexp    go to state 33
    arrpushpop   go to state 37


State 86

   19 arithmexp: exp POW . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 131
    assignexp    go to state 33
    arrpushpop   go to state 37


State 87

    3 stmt: exp ';' .

    $default  reduce using rule 3 (stmt)


State 88

   64 arraydecl: arraydecls ';' .

    $default  reduce using rule 64 (arraydecl)


State 89

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   56 assignexp: NAME '=' exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 56 (assignexp)


State 90

   65 arraydecls: NAME '=' arraydeclright .

    $default  reduce using rule 65 (arraydecls)


State 91

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   57 assignexp: NAME ASGNSUM exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 57 (assignexp)


State 92

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   58 assignexp: NAME ASGNDIF exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 58 (assignexp)


State 93

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   59 assignexp: NAME ASGNPROD exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 59 (assignexp)


State 94

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   60 assignexp: NAME ASGNDIV exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 60 (assignexp)


State 95

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   61 assignexp: NAME ASGNMOD exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 61 (assignexp)


State 96

   48 exp: NAME '(' ')' .

    $default  reduce using rule 48 (exp)


State 97

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   72 explist: exp .
   73        | exp . ',' explist

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ','         shift, and go to state 132

    $default  reduce using rule 72 (explist)


State 98

   47 exp: NAME '(' explist . ')'

    ')'  shift, and go to state 133


State 99

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   49    | NAME '[' exp . ']'
   50    | NAME '[' exp . ']' '=' exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ']'         shift, and go to state 134


State 100

   69 arrpushpop: NAME '.' LENGTH .

    $default  reduce using rule 69 (arrpushpop)


State 101

   70 arrpushpop: NAME '.' PUSH . '(' exp ')'

    '('  shift, and go to state 135


State 102

   71 arrpushpop: NAME '.' POP . '(' ')'

    '('  shift, and go to state 136


State 103

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   41    | BIFUNC '(' exp . ')'

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 137


State 104

    5 branchstmt: IF '(' exp . ')' bodylist
    6           | IF '(' exp . ')' bodylist ELSE bodylist
   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 138


State 105

    7 loopstmt: WHILE '(' exp . ')' bodylist
   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 139


State 106

   10 bodylist: '{' list . '}'
   13 list: list . stmt

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '}'        shift, and go to state 140
    '['        shift, and go to state 24

    stmt            go to state 141
    branchstmt      go to state 26
    loopstmt        go to state 27
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37


State 107

    8 loopstmt: DO bodylist WHILE . '(' exp ')'

    '('  shift, and go to state 142


State 108

   56 assignexp: NAME . '=' exp
   57          | NAME . ASGNSUM exp
   58          | NAME . ASGNDIF exp
   59          | NAME . ASGNPROD exp
   60          | NAME . ASGNDIV exp
   61          | NAME . ASGNMOD exp

    '='       shift, and go to state 114
    ASGNSUM   shift, and go to state 44
    ASGNDIF   shift, and go to state 45
    ASGNPROD  shift, and go to state 46
    ASGNDIV   shift, and go to state 47
    ASGNMOD   shift, and go to state 48


State 109

    9 loopstmt: FOR '(' assignexp . ';' exp ';' exp ')' bodylist

    ';'  shift, and go to state 143


State 110

   79 funcdecl: FUNCTION NAME '(' . symlist ')' '{' functionbody '}'
   80 funcnoparamdecl: FUNCTION NAME '(' . ')' '{' functionbody '}'

    NAME  shift, and go to state 144
    ')'   shift, and go to state 145

    symlist  go to state 146


State 111

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   42    | TYPEOF '(' exp . ')'

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 147


State 112

   43 exp: TYPEOF '(' arraydecls . ')'

    ')'  shift, and go to state 148


State 113

   55 exp: READ '(' ')' .

    $default  reduce using rule 55 (exp)


State 114

   56 assignexp: NAME '=' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 89
    assignexp    go to state 33
    arrpushpop   go to state 37


State 115

   20 arithmexp: '(' exp ')' .

    $default  reduce using rule 20 (arithmexp)


State 116

   68 arrayelemsast: exp ',' . arrayelemsast

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp      go to state 28
    logicexp       go to state 29
    bitwisexp      go to state 30
    incrmentexp    go to state 31
    exp            go to state 71
    assignexp      go to state 33
    arrayelemsast  go to state 149
    arrpushpop     go to state 37


State 117

   62 arraydeclright: '[' arrayelemsast ']' .

    $default  reduce using rule 62 (arraydeclright)


State 118

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   24         | exp OR exp .
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 24 (logicexp)


State 119

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   23         | exp AND exp .
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 23 (logicexp)


State 120

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   26          | exp '|' exp .
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 26 (bitwisexp)


State 121

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   27          | exp '^' exp .
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 27 (bitwisexp)


State 122

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   28          | exp '&' exp .
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 28 (bitwisexp)


State 123

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   36    | exp CMP exp .

    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    CMP  error (nonassociative)

    $default  reduce using rule 36 (exp)


State 124

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   30          | exp LEFTSHIFT exp .
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    POW  shift, and go to state 86

    $default  reduce using rule 30 (bitwisexp)


State 125

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   31          | exp RIGHTSHIFT exp .
   36 exp: exp . CMP exp

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    POW  shift, and go to state 86

    $default  reduce using rule 31 (bitwisexp)


State 126

   14 arithmexp: exp . '+' exp
   14          | exp '+' exp .
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    POW  shift, and go to state 86

    $default  reduce using rule 14 (arithmexp)


State 127

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   15          | exp '-' exp .
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85
    POW  shift, and go to state 86

    $default  reduce using rule 15 (arithmexp)


State 128

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   16          | exp '*' exp .
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 16 (arithmexp)


State 129

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   17          | exp '/' exp .
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 17 (arithmexp)


State 130

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   18          | exp '%' exp .
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 18 (arithmexp)


State 131

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   19          | exp POW exp .
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    POW  shift, and go to state 86

    $default  reduce using rule 19 (arithmexp)


State 132

   73 explist: exp ',' . explist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 97
    assignexp    go to state 33
    arrpushpop   go to state 37
    explist      go to state 150


State 133

   47 exp: NAME '(' explist ')' .

    $default  reduce using rule 47 (exp)


State 134

   49 exp: NAME '[' exp ']' .
   50    | NAME '[' exp ']' . '=' exp

    '='  shift, and go to state 151

    $default  reduce using rule 49 (exp)


State 135

   70 arrpushpop: NAME '.' PUSH '(' . exp ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 152
    assignexp    go to state 33
    arrpushpop   go to state 37


State 136

   71 arrpushpop: NAME '.' POP '(' . ')'

    ')'  shift, and go to state 153


State 137

   41 exp: BIFUNC '(' exp ')' .

    $default  reduce using rule 41 (exp)


State 138

    5 branchstmt: IF '(' exp ')' . bodylist
    6           | IF '(' exp ')' . bodylist ELSE bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '{'        shift, and go to state 55
    '['        shift, and go to state 24

    stmt            go to state 56
    branchstmt      go to state 26
    loopstmt        go to state 27
    bodylist        go to state 154
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37


State 139

    7 loopstmt: WHILE '(' exp ')' . bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '{'        shift, and go to state 55
    '['        shift, and go to state 24

    stmt            go to state 56
    branchstmt      go to state 26
    loopstmt        go to state 27
    bodylist        go to state 155
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37


State 140

   10 bodylist: '{' list '}' .

    $default  reduce using rule 10 (bodylist)


State 141

   13 list: list stmt .

    $default  reduce using rule 13 (list)


State 142

    8 loopstmt: DO bodylist WHILE '(' . exp ')'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 156
    assignexp    go to state 33
    arrpushpop   go to state 37


State 143

    9 loopstmt: FOR '(' assignexp ';' . exp ';' exp ')' bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 157
    assignexp    go to state 33
    arrpushpop   go to state 37


State 144

   74 symlist: NAME .
   75        | NAME . ',' symlist

    ','  shift, and go to state 158

    $default  reduce using rule 74 (symlist)


State 145

   80 funcnoparamdecl: FUNCTION NAME '(' ')' . '{' functionbody '}'

    '{'  shift, and go to state 159


State 146

   79 funcdecl: FUNCTION NAME '(' symlist . ')' '{' functionbody '}'

    ')'  shift, and go to state 160


State 147

   42 exp: TYPEOF '(' exp ')' .

    $default  reduce using rule 42 (exp)


State 148

   43 exp: TYPEOF '(' arraydecls ')' .

    $default  reduce using rule 43 (exp)


State 149

   68 arrayelemsast: exp ',' arrayelemsast .

    $default  reduce using rule 68 (arrayelemsast)


State 150

   73 explist: exp ',' explist .

    $default  reduce using rule 73 (explist)


State 151

   50 exp: NAME '[' exp ']' '=' . exp

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 161
    assignexp    go to state 33
    arrpushpop   go to state 37


State 152

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   70 arrpushpop: NAME '.' PUSH '(' exp . ')'

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 162


State 153

   71 arrpushpop: NAME '.' POP '(' ')' .

    $default  reduce using rule 71 (arrpushpop)


State 154

    5 branchstmt: IF '(' exp ')' bodylist .
    6           | IF '(' exp ')' bodylist . ELSE bodylist

    ELSE  shift, and go to state 163

    $default  reduce using rule 5 (branchstmt)


State 155

    7 loopstmt: WHILE '(' exp ')' bodylist .

    $default  reduce using rule 7 (loopstmt)


State 156

    8 loopstmt: DO bodylist WHILE '(' exp . ')'
   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 164


State 157

    9 loopstmt: FOR '(' assignexp ';' exp . ';' exp ')' bodylist
   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ';'         shift, and go to state 165


State 158

   75 symlist: NAME ',' . symlist

    NAME  shift, and go to state 144

    symlist  go to state 166


State 159

   80 funcnoparamdecl: FUNCTION NAME '(' ')' '{' . functionbody '}'

    $default  reduce using rule 12 (list)

    list          go to state 167
    functionbody  go to state 168


State 160

   79 funcdecl: FUNCTION NAME '(' symlist ')' . '{' functionbody '}'

    '{'  shift, and go to state 169


State 161

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   50    | NAME '[' exp ']' '=' exp .

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86

    $default  reduce using rule 50 (exp)


State 162

   70 arrpushpop: NAME '.' PUSH '(' exp ')' .

    $default  reduce using rule 70 (arrpushpop)


State 163

    6 branchstmt: IF '(' exp ')' bodylist ELSE . bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '{'        shift, and go to state 55
    '['        shift, and go to state 24

    stmt            go to state 56
    branchstmt      go to state 26
    loopstmt        go to state 27
    bodylist        go to state 170
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37


State 164

    8 loopstmt: DO bodylist WHILE '(' exp ')' .

    $default  reduce using rule 8 (loopstmt)


State 165

    9 loopstmt: FOR '(' assignexp ';' exp ';' . exp ')' bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 171
    assignexp    go to state 33
    arrpushpop   go to state 37


State 166

   75 symlist: NAME ',' symlist .

    $default  reduce using rule 75 (symlist)


State 167

   13 list: list . stmt
   76 functionbody: list . returnstmt

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    RETURN     shift, and go to state 172
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '['        shift, and go to state 24

    stmt            go to state 141
    branchstmt      go to state 26
    loopstmt        go to state 27
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37
    returnstmt      go to state 173


State 168

   80 funcnoparamdecl: FUNCTION NAME '(' ')' '{' functionbody . '}'

    '}'  shift, and go to state 174


State 169

   79 funcdecl: FUNCTION NAME '(' symlist ')' '{' . functionbody '}'

    $default  reduce using rule 12 (list)

    list          go to state 167
    functionbody  go to state 175


State 170

    6 branchstmt: IF '(' exp ')' bodylist ELSE bodylist .

    $default  reduce using rule 6 (branchstmt)


State 171

    9 loopstmt: FOR '(' assignexp ';' exp ';' exp . ')' bodylist
   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ')'         shift, and go to state 176


State 172

   77 returnstmt: RETURN . ';'
   78           | RETURN . exp ';'

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 64
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    ';'        shift, and go to state 177
    '('        shift, and go to state 23

    arithmexp    go to state 28
    logicexp     go to state 29
    bitwisexp    go to state 30
    incrmentexp  go to state 31
    exp          go to state 178
    assignexp    go to state 33
    arrpushpop   go to state 37


State 173

   76 functionbody: list returnstmt .

    $default  reduce using rule 76 (functionbody)


State 174

   80 funcnoparamdecl: FUNCTION NAME '(' ')' '{' functionbody '}' .

    $default  reduce using rule 80 (funcnoparamdecl)


State 175

   79 funcdecl: FUNCTION NAME '(' symlist ')' '{' functionbody . '}'

    '}'  shift, and go to state 179


State 176

    9 loopstmt: FOR '(' assignexp ';' exp ';' exp ')' . bodylist

    NUMBER     shift, and go to state 4
    NAME       shift, and go to state 5
    BIFUNC     shift, and go to state 6
    STREXP     shift, and go to state 7
    STRERR     shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    DO         shift, and go to state 11
    FOR        shift, and go to state 12
    TYPEOF     shift, and go to state 14
    READ       shift, and go to state 15
    ERRNAME    shift, and go to state 16
    INCREMENT  shift, and go to state 17
    DECREMENT  shift, and go to state 18
    '+'        shift, and go to state 19
    '-'        shift, and go to state 20
    NOT        shift, and go to state 21
    '~'        shift, and go to state 22
    '('        shift, and go to state 23
    '{'        shift, and go to state 55
    '['        shift, and go to state 24

    stmt            go to state 56
    branchstmt      go to state 26
    loopstmt        go to state 27
    bodylist        go to state 180
    arithmexp       go to state 28
    logicexp        go to state 29
    bitwisexp       go to state 30
    incrmentexp     go to state 31
    exp             go to state 32
    assignexp       go to state 33
    arraydeclright  go to state 34
    arraydecl       go to state 35
    arraydecls      go to state 36
    arrpushpop      go to state 37


State 177

   77 returnstmt: RETURN ';' .

    $default  reduce using rule 77 (returnstmt)


State 178

   14 arithmexp: exp . '+' exp
   15          | exp . '-' exp
   16          | exp . '*' exp
   17          | exp . '/' exp
   18          | exp . '%' exp
   19          | exp . POW exp
   23 logicexp: exp . AND exp
   24         | exp . OR exp
   26 bitwisexp: exp . '|' exp
   27          | exp . '^' exp
   28          | exp . '&' exp
   30          | exp . LEFTSHIFT exp
   31          | exp . RIGHTSHIFT exp
   36 exp: exp . CMP exp
   78 returnstmt: RETURN exp . ';'

    OR          shift, and go to state 73
    AND         shift, and go to state 74
    '|'         shift, and go to state 75
    '^'         shift, and go to state 76
    '&'         shift, and go to state 77
    CMP         shift, and go to state 78
    LEFTSHIFT   shift, and go to state 79
    RIGHTSHIFT  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82
    '*'         shift, and go to state 83
    '/'         shift, and go to state 84
    '%'         shift, and go to state 85
    POW         shift, and go to state 86
    ';'         shift, and go to state 181


State 179

   79 funcdecl: FUNCTION NAME '(' symlist ')' '{' functionbody '}' .

    $default  reduce using rule 79 (funcdecl)


State 180

    9 loopstmt: FOR '(' assignexp ';' exp ';' exp ')' bodylist .

    $default  reduce using rule 9 (loopstmt)


State 181

   78 returnstmt: RETURN exp ';' .

    $default  reduce using rule 78 (returnstmt)
